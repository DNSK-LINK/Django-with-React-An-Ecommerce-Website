{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nimport axios from 'axios';\nexport const Login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    let configObject = {\n      \"url\": '/api/users/login',\n      \"method\": \"post\",\n      \"headers\": {\n        'Content-Type': 'application/json'\n      },\n      \"data\": {\n        \"username\": email,\n        \"password\": password\n      }\n    };\n    axios.request(configObject).then(res => {\n      dispatch({\n        type: 'USER_LOGIN_SUCCESS',\n        payload: res.data\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// USER_REGISTER_REQUEST,\n// USER_REGISTER_SUCCESS,\n// USER_REGISTER_FAIL,\n// USER_DETAILS_REQUEST,\n// USER_DETAILS_SUCCESS,","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","axios","Login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","configObject","request","then","res","error","response","detail","message"],"sources":["C:/Users/DNSK/Desktop/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const Login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { 'username': email,'password': password },\r\n            config)\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n   \r\n        let configObject = {\r\n            \"url\": '/api/users/login',\r\n            \"method\": \"post\",\r\n            \"headers\": {'Content-Type': 'application/json'},\r\n             \"data\":{\"username\": email, \"password\": password,}    \r\n        }\r\n        axios.request(configObject ).then((res) => {\r\n             dispatch({type:'USER_LOGIN_SUCCESS',payload:res.data})\r\n             localStorage.setItem(\"userInfo\",JSON.stringify(res.data))\r\n         }) \r\n\r\n\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n    // USER_REGISTER_REQUEST,\r\n    // USER_REGISTER_SUCCESS,\r\n    // USER_REGISTER_FAIL,\r\n    // USER_DETAILS_REQUEST,\r\n    // USER_DETAILS_SUCCESS,"],"mappings":"AAAA,SACIA,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,QAER,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAmB,CAAC,CAAC;IAEtC,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC7B,kBAAkB,EAClB;MAAE,UAAU,EAAEP,KAAK;MAAC,UAAU,EAAEC;IAAS,CAAC,EAC1CG,MAAM,CAAC;IAEXF,QAAQ,CAAC;MAAEC,IAAI,EAAER,kBAAkB;MAAEa,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;IAGtD,IAAIO,YAAY,GAAG;MACf,KAAK,EAAE,kBAAkB;MACzB,QAAQ,EAAE,MAAM;MAChB,SAAS,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC9C,MAAM,EAAC;QAAC,UAAU,EAAEb,KAAK;QAAE,UAAU,EAAEC;MAAS;IACrD,CAAC;IACDH,KAAK,CAACgB,OAAO,CAACD,YAAa,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACtCd,QAAQ,CAAC;QAACC,IAAI,EAAC,oBAAoB;QAACK,OAAO,EAACQ,GAAG,CAACV;MAAI,CAAC,CAAC;MACtDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACI,GAAG,CAACV,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC;EAOP,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZf,QAAQ,CAAC;MACLC,IAAI,EAAEP,eAAe;MACrBY,OAAO,EAAES,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACZ,IAAI,CAACa,MAAM,GAC/CF,KAAK,CAACC,QAAQ,CAACZ,IAAI,CAACa,MAAM,GAC1BF,KAAK,CAACG;IAChB,CAAC,CAAC;EACN;AACJ,CAAC;;AAEG;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}