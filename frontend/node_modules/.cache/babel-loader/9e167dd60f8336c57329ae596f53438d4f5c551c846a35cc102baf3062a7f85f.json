{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DNSK\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\userEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/message';\nimport Loader from '../components/loader';\nimport FormContainer from '../components/formContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserEditScreen() {\n  _s();\n  const userId = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_SUCCESS\n      });\n      navigate('/admin/userlist');\n      dispatch({});\n    } else {\n      if (!user.name || user._id !== Number(userId.id)) {\n        dispatch(getUserDetails(userId.id));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, navigate, user, userId, successUpdate]);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: user.id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(UserEditScreen, \"GQbl1MXIrPVzj+O1ypO3Vbtsrhk=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = UserEditScreen;\nexport default UserEditScreen;\nvar _c;\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Button","Card","Form","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","USER_UPDATE_SUCCESS","jsxDEV","_jsxDEV","UserEditScreen","_s","userId","dispatch","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUdate","success","successUpdate","type","_id","Number","id","submitHandler","e","preventDefault","children","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","label","checked","_c","$RefreshReg$"],"sources":["C:/Users/DNSK/Desktop/ecommerce/frontend/src/screens/userEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Message from '../components/message'\r\nimport Loader from '../components/loader'\r\nimport FormContainer from '../components/formContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen() {\r\n\r\n\r\n \r\n    const userId = useParams();\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n    \r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({ type:USER_UPDATE_SUCCESS})\r\n            navigate('/admin/userlist')\r\n            dispatch({})\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId.id)) {\r\n                dispatch(getUserDetails(userId.id))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n    }, [dispatch, navigate, user, userId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() \r\n        dispatch(updateUser({ _id: user.id, name, email, isAdmin })) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>Go Back</Link>\r\n            <FormContainer>\r\n            \r\n                <h1>Edit User</h1>\r\n    \r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}    \r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}    \r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                    </Form>\r\n            \r\n                )}    \r\n            </FormContainer>    \r\n        </div>\r\n        \r\n    ) \r\n}\r\n\r\nexport default UserEditScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}