{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nimport axios from 'axios';\nexport const Login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    // }\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      'username': email,\n      'password': password\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n\n    // let configObject = {\n    //     \"url\": '/api/users/login/',\n    //     \"method\": \"post\",\n    //     \"headers\": {'Content-Type': 'application/json'},\n    //      \"data\":{\"username\": email, \"password\": password,}    \n    // }\n    // axios.request(configObject ).then((res) => {\n    //      dispatch({type:'USER_LOGIN_SUCCESS',payload:res.data})\n    //      localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n    //  }) \n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// USER_REGISTER_REQUEST,\n// USER_REGISTER_SUCCESS,\n// USER_REGISTER_FAIL,\n// USER_DETAILS_REQUEST,\n// USER_DETAILS_SUCCESS,","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","axios","Login","email","password","dispatch","type","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message"],"sources":["C:/Users/DNSK/Desktop/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const Login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //     },\r\n        // }\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { 'username': email,'password': password })\r\n            \r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n   \r\n        // let configObject = {\r\n        //     \"url\": '/api/users/login/',\r\n        //     \"method\": \"post\",\r\n        //     \"headers\": {'Content-Type': 'application/json'},\r\n        //      \"data\":{\"username\": email, \"password\": password,}    \r\n        // }\r\n        // axios.request(configObject ).then((res) => {\r\n        //      dispatch({type:'USER_LOGIN_SUCCESS',payload:res.data})\r\n        //      localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\r\n        //  }) \r\n\r\n\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n    // USER_REGISTER_REQUEST,\r\n    // USER_REGISTER_SUCCESS,\r\n    // USER_REGISTER_FAIL,\r\n    // USER_DETAILS_REQUEST,\r\n    // USER_DETAILS_SUCCESS,"],"mappings":"AAAA,SACIA,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,QAER,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAmB,CAAC,CAAC;;IAEtC;IACA;IACA;IACA;IACA;IACA,MAAM;MAAEU;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC7B,kBAAkB,EAClB;MAAE,UAAU,EAAEL,KAAK;MAAC,UAAU,EAAEC;IAAS,CAAC,CAAC;IAE/CC,QAAQ,CAAC;MAAEC,IAAI,EAAER,kBAAkB;MAAEW,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;;IAGtD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAOJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZT,QAAQ,CAAC;MACLC,IAAI,EAAEP,eAAe;MACrBU,OAAO,EAAEK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,MAAM,GAC/CF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,MAAM,GAC1BF,KAAK,CAACG;IAChB,CAAC,CAAC;EACN;AACJ,CAAC;;AAEG;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}